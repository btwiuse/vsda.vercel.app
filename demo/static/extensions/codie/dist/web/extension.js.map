{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://codie/./src/web/extension.ts","webpack://codie/external commonjs \"vscode\"","webpack://codie/webpack/bootstrap","webpack://codie/webpack/startup"],"sourcesContent":["/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n\n\nimport * as vscode from 'vscode';\n\nlet myStatusBarItem: vscode.StatusBarItem;\n\nlet count = 0;\n\nlet agents: any;\n\nfunction watch(){\n\tlet api = \"wss://k0s.op.milvzn.com/api/agents/watch\";\n\tlet a = new WebSocket(api);\n\ta.binaryType = \"blob\";\n\ta.addEventListener(\"message\", ({data}: any)=>{\n\t\tagents = JSON.parse(data);\n\t\tcount = agents.length;\n\t\tupdateStatusBarItem();\n\t});\n}\n\nexport function activate({ subscriptions }: vscode.ExtensionContext) {\n  let x = vscode.workspace.registerRemoteAuthorityResolver;\n  watch();\n\n  let startNewD = vscode.commands.registerCommand(\"workbench.action.remote.close2\", () => {\n\t  console.log(\"workbench action remote close2\")\n\t  vscode.commands.getCommands().then((commands)=>{\n\t\t  console.log(commands)\n\t  })\n  })\n  subscriptions.push(startNewD);\n\n  subscriptions.push(\n\t  vscode.commands.registerCommand(\"workbench.action.remote.new0\", () => {\n\t\t  console.log(\"new window, noargs\")\n\t\t  vscode.commands.executeCommand(\"vscode.newWindow\")\n\t  })\n  );\n  subscriptions.push(\n\t  vscode.commands.registerCommand(\"workbench.action.remote.new00\", () => {\n\t\t  console.log(\"new window, reuse\")\n\t\t  vscode.commands.executeCommand(\"vscode.newWindow\", {\n\t\t\t  reuseWindow: true,\n\t\t  })\n\t  })\n  );\n  subscriptions.push(\n\t  vscode.commands.registerCommand(\"workbench.action.remote.new000\", () => {\n\t\t  console.log(\"new window, no reuse\")\n\t\t  vscode.commands.executeCommand(\"vscode.newWindow\", {\n\t\t\t  reuseWindow: false,\n\t\t  })\n\t  })\n  );\n  subscriptions.push(\n\t  vscode.commands.registerCommand(\"workbench.action.remote.new0000\", () => {\n\t\t  console.log(\"new window, no reuse\")\n\t\t  vscode.commands.executeCommand(\"vscode.newWindow\", {\n\t\t\t  remoteAuthority: \"127.0.0.1:8081\",\n\t\t\t  reuseWindow: false,\n\t\t  })\n\t  })\n  );\n  subscriptions.push(\n\t  vscode.commands.registerCommand(\"workbench.action.remote.new00000\", () => {\n\t\t  console.log(\"new window, no reuse\")\n\t\t  vscode.commands.executeCommand(\"vscode.newWindow\", {\n\t\t\t  remoteAuthority: \"127.0.0.1:8081\",\n\t\t\t  reuseWindow: true,\n\t\t  })\n\t  })\n  );\n  subscriptions.push(\n\t  vscode.commands.registerCommand(\"workbench.action.remote.new1\", () => {\n\t\t  console.log(\"new window, remoteAuthority 127.0.0.1:8080\")\n\t\t  vscode.commands.executeCommand(\"vscode.newWindow\", {\n\t\t\t  remoteAuthority: \"127.0.0.1:8080\",\n\t\t  })\n\t  })\n  );\n  subscriptions.push(\n\t  vscode.commands.registerCommand(\"workbench.action.remote.new2\", () => {\n\t\t  console.log(\"new window, remoteAuthority 127.0.0.1:8080, reuse\")\n\t\t  vscode.commands.executeCommand(\"vscode.newWindow\", {\n\t\t\t  reuseWindow: true,\n\t\t\t  remoteAuthority: \"127.0.0.1:8080\",\n\t\t  })\n\t  })\n  );\n  subscriptions.push(\n\t  vscode.commands.registerCommand(\"workbench.action.remote.new3\", () => {\n\t\t  console.log(\"new window, remoteAuthority 127.0.0.1:8080, no reuse\")\n\t\t  vscode.commands.executeCommand(\"vscode.newWindow\", {\n\t\t\t  reuseWindow: false,\n\t\t\t  remoteAuthority: \"127.0.0.1:8080\",\n\t\t  })\n\t  })\n  );\n  subscriptions.push(\n\tvscode.commands.registerCommand(\"workbench.action.remote.closeCurrent\", () => {\n\t\tconsole.log(\"new window, noargs\")\n\t\tvscode.commands.executeCommand(\"vscode.newWindow\")\n\t})\n  );\n  subscriptions.push(\n\tvscode.commands.registerCommand(\"workbench.action.remote.newWithInput\", async () => {\n\t\t// Prompt the user for the remote authority (e.g., \"127.0.0.1:8080\")\n\t\tconst remoteAuthority = await vscode.window.showInputBox({\n\t\t\tplaceHolder: 'Enter remote authority (e.g., 127.0.0.1:8080)',\n\t\t\tprompt: 'Specify the remote authority for the new window',\n\t\t\tvalue: '127.0.0.1:8080' // Default value\n\t\t});\n\n\t\t// Check if the user provided input\n\t\tif (remoteAuthority) {\n            console.log(`Replacing window with remoteAuthority: ${remoteAuthority}`);\n            // Replace the current window with a new one\n            vscode.commands.executeCommand(\"vscode.newWindow\", {\n                remoteAuthority: remoteAuthority,\n                reuseWindow: true // <-- This replaces the current window\n            });\n\t\t}\n\t})\n  );\n  subscriptions.push(\n\tvscode.commands.registerCommand(\"workbench.action.remote.newWindowWithInput\", async () => {\n\t\t// Prompt the user for the remote authority (e.g., \"127.0.0.1:8080\")\n\t\tconst remoteAuthority = await vscode.window.showInputBox({\n\t\t\tplaceHolder: 'Enter remote authority (e.g., 127.0.0.1:8080)',\n\t\t\tprompt: 'Specify the remote authority for the new window',\n\t\t\tvalue: '127.0.0.1:8080' // Default value\n\t\t});\n\n\t\t// Check if the user provided input\n\t\tif (remoteAuthority) {\n            console.log(`Opening window with remoteAuthority: ${remoteAuthority}`);\n            vscode.commands.executeCommand(\"vscode.newWindow\", {\n                remoteAuthority: remoteAuthority,\n                reuseWindow: false\n            });\n\t\t}\n\t})\n  );\n\t// register a command that is invoked when the status bar\n\t// item is selected\n\tconst myCommandId = 'sample.showSelectionCount';\n\tsubscriptions.push(vscode.commands.registerCommand(myCommandId, () => {\n\t\tconst n = getNumberOfSelectedLines(vscode.window.activeTextEditor);\n\t\tvscode.window.showInformationMessage(`Yeah, ${count} line(s) selected... Keep going!`);\n\t\tconsole.log(count, agents)\n\t}));\n\n\t// create a new status bar item that we can now manage\n\tmyStatusBarItem = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left, Number.MAX_VALUE-1);\n\tmyStatusBarItem.command = myCommandId;\n\tsubscriptions.push(myStatusBarItem);\n\n\t// register some listener that make sure the status bar \n\t// item always up-to-date\n\tsubscriptions.push(vscode.window.onDidChangeActiveTextEditor(updateStatusBarItem));\n\tsubscriptions.push(vscode.window.onDidChangeTextEditorSelection(updateStatusBarItem));\n\n\t// update status bar item once at start\n\tupdateStatusBarItem();\n}\n\nfunction updateStatusBarItem(): void {\n\tconst n = getNumberOfSelectedLines(vscode.window.activeTextEditor);\n\tif (n >= 0) {\n\t\tmyStatusBarItem.text = `$(megaphone) ${count} agents(s) connected`;\n\t\tmyStatusBarItem.show();\n\t} else {\n\t\tmyStatusBarItem.hide();\n\t}\n}\n\nfunction getNumberOfSelectedLines(editor: vscode.TextEditor | undefined): number {\n\tlet lines = 0;\n\tif (editor) {\n\t\tlines = editor.selections.reduce((prev, curr) => prev + (curr.end.line - curr.start.line), 0);\n\t}\n\treturn lines;\n}\n\nexport function deactivate() {\n\t// Everything is nicely registered in context.subscriptions,\n\t// so nothing to do for now.\n}\n\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(236);\n"],"names":["myStatusBarItem","agents","count","updateStatusBarItem","getNumberOfSelectedLines","vscode","window","activeTextEditor","text","show","hide","editor","lines","selections","reduce","prev","curr","end","line","start","subscriptions","workspace","registerRemoteAuthorityResolver","a","WebSocket","binaryType","addEventListener","data","JSON","parse","length","watch","startNewD","commands","registerCommand","console","log","getCommands","then","push","executeCommand","reuseWindow","remoteAuthority","showInputBox","placeHolder","prompt","value","myCommandId","showInformationMessage","createStatusBarItem","StatusBarAlignment","Left","Number","MAX_VALUE","command","onDidChangeActiveTextEditor","onDidChangeTextEditorSelection","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}